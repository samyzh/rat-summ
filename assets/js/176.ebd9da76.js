(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{1902:function(s,n,e){"use strict";e.r(n);var a=e(14),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[s._v("#")]),s._v(" 基础知识")]),s._v(" "),a("h3",{attrs:{id:"vue的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的生命周期"}},[s._v("#")]),s._v(" Vue的生命周期")]),s._v(" "),a("p",[s._v("大自然有春夏秋冬，人有生老病死，优秀的Vue当然也存在自己的生命周期。")]),s._v(" "),a("p",[s._v("对于Vue来说它的生命周期"),a("strong",[s._v("就是Vue实例从创建到销毁的过程")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"生命周期函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数"}},[s._v("#")]),s._v(" 生命周期函数")]),s._v(" "),a("p",[s._v("在生命周期的过程中运行着一些叫做生命周期的函数，给予了开发者在不同的生命周期阶段添加业务代码的能力。")]),s._v(" "),a("p",[s._v("在网上的一些文章中有的也叫它们生命周期钩子，那"),a("strong",[s._v("钩子")]),s._v("又是什么呢？")]),s._v(" "),a("h3",{attrs:{id:"钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数"}},[s._v("#")]),s._v(" 钩子函数")]),s._v(" "),a("p",[s._v("其实和回调是一个概念，当系统执行到某处时，检查是否有hook(钩子)，有的话就会执行回调。")]),s._v(" "),a("p",[s._v("此hook非彼hook。")]),s._v(" "),a("p",[s._v("通俗的说，hook就是在程序运行中，在某个特定的位置，框架的开发者设计好了一个钩子来告诉我们当前程序已经运行到特定的位置了，会触发一个回调函数，并提供给我们，让我们可以在生命周期的特定阶段进行相关业务代码的编写。")]),s._v(" "),a("p",[s._v("我在官方提供的图片上添加了相关注释，希望能够让大家看的更明白一些，如下图。")]),s._v(" "),a("p",[a("img",{attrs:{src:e(736),alt:"image-20210927191712922"}})]),s._v(" "),a("p",[s._v("虽然添加了很多注释，看不懂不要慌，我们来逐一进行讲解。")]),s._v(" "),a("p",[s._v("总的来说，Vue的生命周期可以分为以下八个阶段：")]),s._v(" "),a("blockquote",[a("p",[s._v("beforeCreate  实例创建前")]),s._v(" "),a("p",[s._v("created       实例创建完成")]),s._v(" "),a("p",[s._v("beforeMount   挂载前")]),s._v(" "),a("p",[s._v("mounted       挂载完成")]),s._v(" "),a("p",[s._v("beforeUpdate  更新前")]),s._v(" "),a("p",[s._v("updated       更新完成")]),s._v(" "),a("p",[s._v("beforeDestory 销毁前")]),s._v(" "),a("p",[s._v("destoryed     销毁完成")])]),s._v(" "),a("h3",{attrs:{id:"_1-beforecreate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-beforecreate"}},[s._v("#")]),s._v(" 1.beforeCreate")]),s._v(" "),a("p",[s._v("这个钩子是new Vue()之后触发的第一个钩子，在当前阶段中data、methods、computed以及watch上的数据和方法均不能被访问。")]),s._v(" "),a("h3",{attrs:{id:"_2-created"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-created"}},[s._v("#")]),s._v(" 2.created")]),s._v(" "),a("p",[s._v("这个钩子在实例创建完成后发生，当前阶段已经完成了数据观测，也就是可以使用数据，更改数据，在这里更改数据不会触发updated函数。可以做一些初始数据的获取，在当前阶段无法与Dom进行交互，如果你非要想，可以通过vm.$nextTick来访问Dom。")]),s._v(" "),a("h3",{attrs:{id:"_3-beforemount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-beforemount"}},[s._v("#")]),s._v(" 3.beforeMount")]),s._v(" "),a("p",[s._v("这个钩子发生在挂载之前，在这之前template模板已导入渲染函数编译。而当前阶段虚拟Dom已经创建完成，即将开始渲染。在此时也可以对数据进行更改，不会触发updated。")]),s._v(" "),a("h3",{attrs:{id:"_4-mounted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-mounted"}},[s._v("#")]),s._v(" 4.mounted")]),s._v(" "),a("p",[s._v("这个钩子在挂载完成后发生，在当前阶段，真实的Dom挂载完毕，数据完成双向绑定，可以访问到Dom节点，使用"),a("code",[s._v("$refs")]),s._v("属性对Dom进行操作。也可以向后台发送请求，拿到返回数据。")]),s._v(" "),a("h3",{attrs:{id:"_5-beforeupdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-beforeupdate"}},[s._v("#")]),s._v(" 5.beforeUpdate")]),s._v(" "),a("p",[s._v("这个钩子发生在更新之前，也就是响应式数据发生更新，虚拟dom重新渲染之前被触发，你可以在当前阶段进行更改数据，不会造成重渲染。")]),s._v(" "),a("h3",{attrs:{id:"_6-updated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-updated"}},[s._v("#")]),s._v(" 6.updated")]),s._v(" "),a("p",[s._v("这个钩子发生在更新完成之后，当前阶段组件Dom已完成更新。要注意的是避免在此期间更改数据，因为这可能会导致无限循环的更新。")]),s._v(" "),a("h3",{attrs:{id:"_7-beforedestroy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-beforedestroy"}},[s._v("#")]),s._v(" 7.beforeDestroy")]),s._v(" "),a("p",[s._v("这个钩子发生在实例销毁之前，在当前阶段实例完全可以被使用，我们可以在这时进行善后收尾工作，比如清除计时器。")]),s._v(" "),a("h3",{attrs:{id:"_8-destroyed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-destroyed"}},[s._v("#")]),s._v(" 8.destroyed")]),s._v(" "),a("p",[s._v("这个钩子发生在实例销毁之后，这个时候只剩下了dom空壳。组件已被拆解，数据绑定被卸除，监听被移出，子实例也统统被销毁。")]),s._v(" "),a("h3",{attrs:{id:"注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[s._v("#")]),s._v(" 注意点")]),s._v(" "),a("p",[s._v("在使用生命周期时有几点注意事项需要我们牢记。")]),s._v(" "),a("p",[s._v("1.除了beforeCreate和created钩子之外，其他钩子均在服务器端渲染期间不被调用。")]),s._v(" "),a("p",[s._v("2.上文曾提到过，在updated的时候千万不要去修改data里面赋值的数据，否则会导致死循环。")]),s._v(" "),a("p",[s._v("3.Vue的所有生命周期函数都是自动绑定到this的上下文上。所以，你这里使用箭头函数的话，就会出现this指向的父级作用域，就会报错。原因下面源码部分会讲解。")]),s._v(" "),a("h2",{attrs:{id:"源码解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码解读"}},[s._v("#")]),s._v(" 源码解读")]),s._v(" "),a("p",[s._v("因为Vue的源码部分包含很多内容，本文只选取生命周期相关的关键性代码进行解析。同时也强烈推荐大家学习Vue源码的其他内容，因为这个框架真的很优秀，附上链接［Vue.js技术揭秘］("),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fustbhuangyi.github.io%2Fvue-analysis%2Fprepare%2F",target:"_blank",rel:"noopener noreferrer"}},[s._v("ustbhuangyi.github.io/vue-analysi…"),a("OutboundLink")],1),s._v(")。")]),s._v(" "),a("p",[s._v("我们先来从源码中来解答上文注意点的第四个问题(以下所有代码都有删减，用...代替删减部分)。")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("// src/core/instance/lifecycle.js\n// callhook 函数的功能就是在当前vue组件实例中，调用某个生命周期钩子注册的所有回调函数。\n// vm:Vue实例\n// hook:生命周期名字\nexport function callHook (vm: Component, hook: string) {\n  pushTarget()\n  const handlers = vm.$options[hook] \n  // 初始化合并 options 的过程 、，将各个生命周期函数合并到 options 里\n  const info = `${hook} hook`\n  if (handlers) {\n    for (let i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info)\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook)\n  }\n  popTarget()\n}\n\n// src/core/util/error.js\nexport function invokeWithErrorHandling (\n  handler: Function,\n  context: any,\n  args: null | any[],\n  vm: any,\n  info: string\n) {\n  let res\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context)\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res._handled = true\n    }\n  } catch (e) {\n    handleError(e, vm, info)\n  }\n  return res\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])]),a("p",[s._v("我们从上面的代码中可以看到callHook中调用了invokeWithErrorHandling方法，在invokeWithErrorHandling方法中，使用了apply和call改变了this指向，而在箭头函数中this指向是无法改变的，所以我们在编写生命周期函数的时候不能使用箭头函数。关于this指向问题请移步我的另一篇文章［治疗this“皮”的详细药方］("),a("a",{attrs:{href:"https://juejin.cn/post/6844903876487806984",target:"_blank",rel:"noopener noreferrer"}},[s._v("juejin.cn/post/684490…"),a("OutboundLink")],1),s._v(")。")]),s._v(" "),a("p",[s._v("解答完上面遗留的问题后，我们再来逐一讲解各个生命周期。")]),s._v(" "),a("h3",{attrs:{id:"_1-beforecreate和created"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-beforecreate和created"}},[s._v("#")]),s._v(" 1.beforeCreate和created")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("// src/core/instance/init\nexport function initMixin (Vue: Class"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(") {\n  Vue.prototype._init = function (options?: Object) {\n    const vm: Component = this\n    ...\n    // 合并选项部分已省略\n    \n    initLifecycle(vm)  \n    // 主要就是给vm对象添加了 $parent、$root、$children 属性，以及一些其它的生命周期相关的标识\n    initEvents(vm) // 初始化事件相关的属性\n    initRender(vm)  // vm 添加了一些虚拟 dom、slot 等相关的属性和方法\n    callHook(vm, 'beforeCreate')  // 调用 beforeCreate 钩子\n    //下面 initInjections(vm) 和 initProvide(vm) 两个配套使用，用于将父组件 _provided 中定义的值，通过 inject 注入到子组件，且这些属性不会被观察\n    initInjections(vm) \n    initState(vm)   // props、methods、data、watch、computed等数据初始化\n    initProvide(vm) \n    callHook(vm, 'created')  // 调用 created 钩子\n  }\n}\n\n// src/core/instance/state\nexport function initState (vm: Component) {\n  vm._watchers = []\n  const opts = vm.$options\n  if (opts.props) initProps(vm, opts.props)\n  if (opts.methods) initMethods(vm, opts.methods)\n  if (opts.data) {\n    initData(vm)\n  } else {\n    observe(vm._data = {}, true /* asRootData */)\n  }\n  if (opts.computed) initComputed(vm, opts.computed)\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch)\n  }\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("p",[s._v("我们可以看到beforeCreate钩子调用是在initState之前的，而从上面的第二段代码我们可以看出initState的作用是对props、methods、data、computed、watch等属性做初始化处理。")]),s._v(" "),a("p",[s._v("通过阅读源码，我们更加清楚的明白了在beforeCreate钩子的时候我们没有对props、methods、data、computed、watch上的数据的访问权限。在created中才可以。")]),s._v(" "),a("h3",{attrs:{id:"_2-beforemount和mounted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-beforemount和mounted"}},[s._v("#")]),s._v(" 2.beforeMount和mounted")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("// mountComponent 核心就是先实例化一个渲染Watcher\n// 在它的回调函数中会调用 updateComponent 方法\n// 两个核心方法 vm._render(生成虚拟Dom) 和 vm._update(映射到真实Dom)\n// src/core/instance/lifecycle\nexport function mountComponent (\n  vm: Component,\n  el: ?Element,\n  hydrating?: boolean\n): Component {\n  vm.$el = el\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode\n    ...\n  }\n  callHook(vm, 'beforeMount')  // 调用 beforeMount 钩子\n\n  let updateComponent\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = () => {\n    // 将虚拟 Dom 映射到真实 Dom 的函数。\n    // vm._update 之前会先调用 vm._render() 函数渲染 VNode\n      ...\n      const vnode = vm._render()\n      ...\n      vm._update(vnode, hydrating)\n    }\n  } else {\n    updateComponent = () => {\n      vm._update(vm._render(), hydrating)\n    }\n  }\n\n  new Watcher(vm, updateComponent, noop, {\n    before () {\n     // 先判断是否 mouted 完成 并且没有被 destroyed\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate')\n      }\n    }\n  }, true /* isRenderWatcher */)\n\n  if (vm.$vnode == null) {\n    vm._isMounted = true\n    callHook(vm, 'mounted')  //调用 mounted 钩子\n  }\n  return vm\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br")])]),a("p",[s._v("通过上面的代码，我们可以看出在执行"),a("code",[s._v("vm._render()")]),s._v("函数渲染VNode之前，执行了 beforeMount钩子函数，在执行完 "),a("code",[s._v("vm._update()")]),s._v("把VNode patch到真实Dom后，执行 mouted钩子。也就明白了为什么直到mounted阶段才名正言顺的拿到了Dom。")]),s._v(" "),a("h3",{attrs:{id:"_3-beforeupdate和updated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-beforeupdate和updated"}},[s._v("#")]),s._v(" 3.beforeUpdate和updated")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("  // src/core/instance/lifecycle\n new Watcher(vm, updateComponent, noop, {\n    before () {\n     // 先判断是否 mouted 完成 并且没有被 destroyed\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate')  // 调用 beforeUpdate 钩子\n      }\n    }\n  }, true /* isRenderWatcher */)\n \n // src/core/observer/scheduler \n function callUpdatedHooks (queue) {\n   let i = queue.length\n   while (i--) {\n     const watcher = queue[i]\n     const vm = watcher.vm\n     if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n       // 只有满足当前 watcher 为 vm._watcher（也就是当前的渲染watcher）\n       // 以及组件已经 mounted 并且没有被 destroyed 才会执行 updated 钩子函数。\n       callHook(vm, 'updated')  // 调用 updated 钩子\n       }\n     }\n   }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[s._v("第一段代码就是在beforeMount和mounted钩子中间出现的，那么watcher中究竟做了些什么呢？第二段代码的callUpdatedHooks函数中什么时候才可以满足条件并执行updated呢？我们来接着往下看。")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("// src/instance/observer/watcher.js\nexport default class Watcher {\n  ...\n  constructor (\n    vm: Component,\n    expOrFn: string | Function,\n    cb: Function,\n    options?: ?Object,\n    // 在它的构造函数里会判断 isRenderWatcher，\n    // 接着把当前 watcher 的实例赋值给 vm._watcher\n    isRenderWatcher?: boolean\n  ) {\n    // 还把当前 wathcer 实例 push 到 vm._watchers 中，\n    // vm._watcher 是专门用来监听 vm 上数据变化然后重新渲染的，\n    // 所以它是一个渲染相关的 watcher，因此在 callUpdatedHooks 函数中，\n    // 只有 vm._watcher 的回调执行完毕后，才会执行 updated 钩子函数\n    this.vm = vm\n    if (isRenderWatcher) {\n      vm._watcher = this\n    }\n    vm._watchers.push(this)\n    ...\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("看到这里我们明白了Vue是通过watcher来监听实例上的数据变化，进而控制渲染流程。")]),s._v(" "),a("h3",{attrs:{id:"_4-beforedestroy和destroyed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-beforedestroy和destroyed"}},[s._v("#")]),s._v(" 4.beforeDestroy和destroyed")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("  // src/core/instance/lifecycle.js\n  // 在 $destroy 的执行过程中，它会执行 vm.__patch__(vm._vnode, null)\n  // 触发它子组件的销毁钩子函数，这样一层层的递归调用，\n  // 所以 destroy 钩子函数执行顺序是先子后父，和 mounted 过程一样。\n  Vue.prototype.$destroy = function () {\n    const vm: Component = this\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy')  // 调用 beforeDestroy 钩子\n    vm._isBeingDestroyed = true\n    // 一些销毁工作\n    const parent = vm.$parent\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm)\n    }\n    // 拆卸 watchers\n    if (vm._watcher) {\n      vm._watcher.teardown()\n    }\n    let i = vm._watchers.length\n    while (i--) {\n      vm._watchers[i].teardown()\n    }\n    ...\n    vm._isDestroyed = true\n    // 调用当前 rendered tree 上的 destroy 钩子\n    // 发现子组件，会先去销毁子组件\n    vm.__patch__(vm._vnode, null)\n    callHook(vm, 'destroyed')  // 调用 destroyed 钩子\n    // 关闭所有实例侦听器。\n    vm.$off()\n    // 删除 __vue__ 引用\n    if (vm.$el) {\n      vm.$el.__vue__ = null\n    }\n    // 释放循环引用\n    if (vm.$vnode) {\n      vm.$vnode.parent = null\n    }\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])]),a("p",[s._v("通过上面的代码，我们了解了组件销毁阶段的拆卸过程，其中会执行一个"),a("code",[s._v("__patch__")]),s._v("函数，讲解起来篇幅较多，想要深入了解该部分的同学可以自行阅读源码解读处给大家的链接。")]),s._v(" "),a("p",[s._v("除了这八种钩子外，我们在官网也可以查阅到另外几种不常用的钩子，这里列举出来。")]),s._v(" "),a("h2",{attrs:{id:"几种不常用的钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几种不常用的钩子"}},[s._v("#")]),s._v(" 几种不常用的钩子")]),s._v(" "),a("h3",{attrs:{id:"activated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activated"}},[s._v("#")]),s._v(" activated")]),s._v(" "),a("p",[s._v("keep-alive 组件激活时调用，该钩子在服务器端渲染期间不被调用。")]),s._v(" "),a("h3",{attrs:{id:"deactivated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deactivated"}},[s._v("#")]),s._v(" deactivated")]),s._v(" "),a("p",[s._v("keep-alive 组件停用时调用，该钩子在服务器端渲染期间不被调用。")]),s._v(" "),a("h3",{attrs:{id:"errorcaptured"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#errorcaptured"}},[s._v("#")]),s._v(" errorCaptured")]),s._v(" "),a("p",[s._v("当捕获一个来自子孙组件的错误时被调用。此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 false 以阻止该错误继续向上传播")]),s._v(" "),a("p",[s._v("你可以在此钩子中修改组件的状态。因此在模板或渲染函数中设置其它内容的短路条件非常重要，它可以防止当一个错误被捕获时该组件进入一个无限的渲染循环。")])])}),[],!1,null,null,null);n.default=t.exports},736:function(s,n,e){s.exports=e.p+"assets/img/image-20210927191712922.c2164bef.png"}}]);