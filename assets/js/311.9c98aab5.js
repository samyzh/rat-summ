(window.webpackJsonp=window.webpackJsonp||[]).push([[311],{1811:function(s,a,t){"use strict";t.r(a);var e=t(14),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"and"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#and"}},[s._v("#")]),s._v(" and")]),s._v(" "),t("h3",{attrs:{id:"情景描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情景描述"}},[s._v("#")]),s._v(" 情景描述")]),s._v(" "),t("h4",{attrs:{id:"情景一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情景一"}},[s._v("#")]),s._v(" 情景一：")]),s._v(" "),t("ul",[t("li",[s._v("项目中大量的使用ant-design组件，它包含一些base样式，比如颜色、字体等等。")]),s._v(" "),t("li",[s._v("但是你的项目可能有自己的主题，因此需要改变主题（比如项目的基本色调是红色因此需要将antd中有颜色的部分变成红色）")])]),s._v(" "),t("h4",{attrs:{id:"情景二"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#情景二"}},[s._v("#")]),s._v(" 情景二：")]),s._v(" "),t("ul",[t("li",[s._v("虽然全局主题被改成了项目需要的样子")]),s._v(" "),t("li",[s._v("但是有可能恰巧只有你的组件需要颜色跟别的组件不同")]),s._v(" "),t("li",[s._v("这时候就需要单独的在你的组件中覆盖antd的样式")])]),s._v(" "),t("h3",{attrs:{id:"解决修改主题的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决修改主题的问题"}},[s._v("#")]),s._v(" 解决修改主题的问题")]),s._v(" "),t("blockquote",[t("h5",{attrs:{id:"按照官网的介绍-有两种方式可以修改主题我们项目只使用的第二种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按照官网的介绍-有两种方式可以修改主题我们项目只使用的第二种方式"}},[s._v("#")]),s._v(" 按照官网的介绍：有两种方式可以修改主题我们项目只使用的第二种方式")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("首先建立一个单独的less文件"),t("code",[s._v("self.less")]),s._v("定义自己的主题")])]),s._v(" "),t("li",[t("p",[s._v("然后建立另一个less文件")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ant-theme.less\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("将原生的antd以及self.less引入")]),s._v(" "),t("div",{staticClass:"language-less line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-less"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"~antd/dist/antd.less"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引入官方提供的 less 样式入口文件")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your-theme-file.less"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于覆盖上面定义的变量")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("最后将")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ant-theme.less\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("引入webpack入口文件")]),s._v(" "),t("ul",[t("li",[s._v("Q1:为什么要将antd的less样式放到入口文件引入？")]),s._v(" "),t("li",[s._v("A1:因为如果想要使用antd的组件处理引入组件还需要引入其less样式，在入口文件引入所有的antd的less样式都会被打包，就不需要在每个单独的conatienr中引入了less样式")])])])]),s._v(" "),t("h3",{attrs:{id:"在某个组件中的样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在某个组件中的样式"}},[s._v("#")]),s._v(" 在某个组件中的样式")]),s._v(" "),t("blockquote",[t("h4",{attrs:{id:"解决改写antd-component在某个组件中的样式-仅仅某一个conatiner需要修改样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决改写antd-component在某个组件中的样式-仅仅某一个conatiner需要修改样式"}},[s._v("#")]),s._v(" 解决改写antd Component在某个组件中的样式（仅仅某一个conatiner需要修改样式）")])]),s._v(" "),t("ul",[t("li",[s._v("前提：项目中使用css module，因此所有定义在index.module.scss文件的样式全部都会改名（常常遇到无法覆盖样式的原因大部分归结于此）")]),s._v(" "),t("li",[s._v("重点：想要覆盖antd的样式就要通过同名class重写样式")]),s._v(" "),t("li",[s._v("因此：保证找打你想要修改的样式的正确的classname\n"),t("ul",[t("li",[s._v("使用使用这个classname重写样式的时候类名绝对不会被修改（一旦修改就无法匹配到antd的对应class）")])])]),s._v(" "),t("li",[s._v("方法：同样也是在index.module.scss中写类名定义但是要写成如下的样子：")])]),s._v(" "),t("p",[s._v("global模块保证了其中定义的所有样式的名字都不会被修改")]),s._v(" "),t("div",{staticClass:"language-css line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v(":global")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".ant-calendar-input-wrap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 14px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("height")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 45px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("padding-left")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("12px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("line-height")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 45px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"antd-vue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#antd-vue"}},[s._v("#")]),s._v(" antd-vue")]),s._v(" "),t("p",[t("strong",[s._v("覆盖antd样式解决办法有两个：")])]),s._v(" "),t("h3",{attrs:{id:"_1-在一个组件中同时使用有作用域和无作用域的样式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-在一个组件中同时使用有作用域和无作用域的样式"}},[s._v("#")]),s._v(" 1.在一个组件中同时使用有作用域和无作用域的样式")]),s._v(" "),t("p",[s._v("当 "),t("code",[s._v("<style>")]),s._v("标签有 scoped 属性时，它的 CSS 只作用于当前组件中的元素。")]),s._v(" "),t("p",[s._v("vue组件编译后，会将 template 中的每个元素加入 [data-v-xxxx] 属性来确保 style scoped 仅本组件的元素而不会污染全局。")]),s._v(" "),t("h3",{attrs:{id:"_2-深度作用选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-深度作用选择器"}},[s._v("#")]),s._v(" "),t("strong",[s._v("2.深度作用选择器")])]),s._v(" "),t("p",[s._v("如果你希望 scoped 样式中的一个选择器能够作用得“更深”，")]),s._v(" "),t("p",[t("strong",[s._v("例如影响子组件，你可以使用 >>> 操作符：只作用于css;")])]),s._v(" "),t("div",{staticClass:"language-css line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("<style scoped>\n .a >>> .b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n</style>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("如果是sass/less的话可能无法识别，这时候需要使用 /deep/ 选择器了")])]),s._v(" "),t("div",{staticClass:"language-css line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("/deep/ .class2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("20px"),t("span",{pre:!0,attrs:{class:"token selector"}},[s._v("; //对所有子组件生效.\n .class3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  //没有必要写多层deep 父类有deep后子类自动也会深度选择 并且这么写在firfox里会失效\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("但是sass中使用/deep/没问题，在scss中使用/deep/报错了。")]),s._v(" "),t("p",[s._v("找到vue官网关于深度选择器是这样说的：有些像 Sass 之类的预处理器无法正确解析 >>>。这种情况下你可以使用 /deep/ 或 ::v-deep 操作符取而代之——两者都是 >>> 的别名，同样可以正常工作。")]),s._v(" "),t("p",[s._v("于是用 ::v-deep 就可以了")])])}),[],!1,null,null,null);a.default=n.exports}}]);