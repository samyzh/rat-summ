(window.webpackJsonp=window.webpackJsonp||[]).push([[345],{1873:function(e,l,i){"use strict";i.r(l);var v=i(14),a=Object(v.a)({},(function(){var e=this,l=e.$createElement,i=e._self._c||l;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h2",{attrs:{id:"简介"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),i("h2",{attrs:{id:"优化"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[e._v("#")]),e._v(" 优化")]),e._v(" "),i("h3",{attrs:{id:"基本"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#基本"}},[e._v("#")]),e._v(" 基本")]),e._v(" "),i("ul",[i("li",[e._v("使用"),i("code",[e._v("高版本")]),e._v("的 Webpack 和 Node.js")]),e._v(" "),i("li",[i("code",[e._v("多进程/多实例构建")]),e._v("：HappyPack(不维护了)、thread-loader")]),e._v(" "),i("li",[i("code",[e._v("压缩代码")]),e._v(" "),i("ul",[i("li",[e._v("多进程并行压缩\n"),i("ul",[i("li",[e._v("webpack-paralle-uglify-plugin")]),e._v(" "),i("li",[e._v("uglifyjs-webpack-plugin 开启 parallel 参数 (不支持ES6)")]),e._v(" "),i("li",[e._v("terser-webpack-plugin 开启 parallel 参数")])])]),e._v(" "),i("li",[e._v("通过 mini-css-extract-plugin 提取 Chunk 中的 CSS 代码到单独文件，通过 css-loader 的 minimize 选项开启 cssnano 压缩 CSS。")])])]),e._v(" "),i("li",[i("code",[e._v("图片压缩")]),e._v(" "),i("ul",[i("li",[e._v("使用基于 Node 库的 imagemin (很多定制选项、可以处理多种图片格式)")]),e._v(" "),i("li",[e._v("配置 image-webpack-loader")])])]),e._v(" "),i("li",[i("code",[e._v("缩小打包作用域")]),e._v("：\n"),i("ul",[i("li",[e._v("exclude/include (确定 loader 规则范围)")]),e._v(" "),i("li",[e._v("resolve.modules 指明第三方模块的绝对路径 (减少不必要的查找)")]),e._v(" "),i("li",[e._v("resolve.mainFields 只采用 main 字段作为入口文件描述字段 (减少搜索步骤，需要考虑到所有运行时依赖的第三方模块的入口文件描述字段)")]),e._v(" "),i("li",[e._v("resolve.extensions 尽可能减少后缀尝试的可能性")]),e._v(" "),i("li",[e._v("noParse 对完全不需要解析的库进行忽略 (不去解析但仍会打包到 bundle 中，注意被忽略掉的文件里不应该包含 import、require、define 等模块化语句)")]),e._v(" "),i("li",[e._v("IgnorePlugin (完全排除模块)")]),e._v(" "),i("li",[e._v("合理使用alias")])])]),e._v(" "),i("li",[i("code",[e._v("提取页面公共资源")]),e._v("：\n"),i("ul",[i("li",[e._v("基础包分离：\n"),i("ul",[i("li",[e._v("使用 html-webpack-externals-plugin，将基础包通过 CDN 引入，不打入 bundle 中")]),e._v(" "),i("li",[i("strong",[e._v("使用 SplitChunksPlugin 进行(公共脚本、基础包、页面公共文件)分离(Webpack4内置)")]),e._v(" ，替代了 CommonsChunkPlugin 插件")])])])])]),e._v(" "),i("li",[i("code",[e._v("DLL")]),e._v("：\n"),i("ul",[i("li",[e._v("使用 DllPlugin 进行分包，"),i("strong",[e._v("使用 DllReferencePlugin(索引链接) 对 manifest.json 引用，让一些基本不会改动的代码先打包成静态资源，避免反复编译浪费时间。")])]),e._v(" "),i("li",[e._v("HashedModuleIdsPlugin 可以解决模块数字id问题")])])]),e._v(" "),i("li",[i("code",[e._v("充分利用缓存提升二次构建速度")]),e._v("：\n"),i("ul",[i("li",[e._v("babel-loader 开启缓存")]),e._v(" "),i("li",[e._v("terser-webpack-plugin 开启缓存")]),e._v(" "),i("li",[e._v("使用 cache-loader 或者 hard-source-webpack-plugin")])])]),e._v(" "),i("li",[i("code",[e._v("Tree shaking")]),e._v(" "),i("ul",[i("li",[e._v("打包过程中检测工程中没有引用过的模块并进行标记，在资源压缩时将它们从最终的bundle中去掉(只能对ES6 Modlue生效) 开发中尽可能使用ES6 Module的模块，提高tree shaking效率")]),e._v(" "),i("li",[i("strong",[e._v("禁用 babel-loader 的模块依赖解析")]),e._v("，否则 Webpack 接收到的就都是转换过的 CommonJS 形式的模块，无法进行 tree-shaking")]),e._v(" "),i("li",[e._v("使用 PurifyCSS(不在维护) 或者 uncss 去除无用 CSS 代码\n"),i("ul",[i("li",[e._v("purgecss-webpack-plugin 和 mini-css-extract-plugin配合使用(建议)")])])])])]),e._v(" "),i("li",[i("code",[e._v("Scope hoisting")]),e._v(" "),i("ul",[i("li",[e._v("构建后的代码会存在大量闭包，造成体积增大，运行代码时创建的函数作用域变多，内存开销变大**。Scope hoisting 将所有模块的代码按照引用顺序放在一个函数作用域里，然后适当的重命名一些变量以防止变量名冲突**")]),e._v(" "),i("li",[e._v("必须是ES6的语法，因为有很多第三方库仍采用 CommonJS 语法，为了充分发挥 Scope hoisting 的作用，需要配置 mainFields 对第三方模块优先采用 jsnext:main 中指向的ES6模块化语法")])])]),e._v(" "),i("li",[i("code",[e._v("动态Polyfill")]),e._v(" "),i("ul",[i("li",[e._v("建议采用 polyfill-service 只给用户返回需要的polyfill，社区维护。 (部分国内奇葩浏览器UA可能无法识别，但可以降级返回所需全部polyfill)")])])])]),e._v(" "),i("p",[e._v("更多优化请参考"),i("a",{attrs:{href:"https://www.webpackjs.com/guides/build-performance/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网-构建性能"),i("OutboundLink")],1)]),e._v(" "),i("h3",{attrs:{id:"分类统计"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分类统计"}},[e._v("#")]),e._v(" 分类统计")]),e._v(" "),i("h4",{attrs:{id:"开发环境"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#开发环境"}},[e._v("#")]),e._v(" 开发环境")]),e._v(" "),i("ul",[i("li",[e._v("HRM (热替换)")]),e._v(" "),i("li",[e._v("webpack-dev-server （本地服务器）")]),e._v(" "),i("li",[e._v("soure-map （调试）")]),e._v(" "),i("li",[e._v("webpack-bundle-analyzer（打包生成代码块分析视图）")]),e._v(" "),i("li",[e._v("size-plugin（监控打包资源的体积变量化）")]),e._v(" "),i("li",[e._v("speed-measure-webpack-plugin（分析loader和plugin打包的耗时）")])]),e._v(" "),i("h4",{attrs:{id:"生产环境"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#生产环境"}},[e._v("#")]),e._v(" 生产环境")]),e._v(" "),i("h5",{attrs:{id:"体积优化【要点】"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#体积优化【要点】"}},[e._v("#")]),e._v(" "),i("strong",[e._v("体积优化")]),e._v("【要点】")]),e._v(" "),i("ul",[i("li",[e._v("html压缩 （html-webpack-plugin ）")]),e._v(" "),i("li",[e._v("js压缩 （production模式自动开启）")]),e._v(" "),i("li",[e._v("css压缩 （optimize-css-assets-webpack-plugin）")]),e._v(" "),i("li",[e._v("css提取（mini-css-extract-plugin）")]),e._v(" "),i("li",[e._v("externals （排除不需要被打包的第三方）")]),e._v(" "),i("li",[e._v("tree-shake ( production模式自动开启("),i("strong",[e._v("webpack4限EsModule;webpack5不限EsModule,CommonJs,优秀得很")]),e._v(") )")]),e._v(" "),i("li",[i("strong",[e._v("import(懒加载，预加载（预加载慎用））")])]),e._v(" "),i("li",[e._v("code-split ( optimization )")])]),e._v(" "),i("h5",{attrs:{id:"打包速度优化"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#打包速度优化"}},[e._v("#")]),e._v(" "),i("strong",[e._v("打包速度优化")])]),e._v(" "),i("ul",[i("li",[e._v("exclude / exclude (排除一些不需要编译的文件)")]),e._v(" "),i("li",[e._v("module.noParse (排除不需要被loader编译的第三方库)")]),e._v(" "),i("li",[e._v("babel缓存（ 缓存cacheDirectory ）")]),e._v(" "),i("li",[e._v("多线程打包（thread-loader 、happyPack）")]),e._v(" "),i("li",[e._v("动态链 （ DLL ）")])]),e._v(" "),i("h2",{attrs:{id:"相关链接"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#相关链接"}},[e._v("#")]),e._v(" 相关链接")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://juejin.cn/post/6844903924806189070",target:"_blank",rel:"noopener noreferrer"}},[e._v("Webpack优化——将你的构建效率提速翻倍 - 掘金 (juejin.cn)"),i("OutboundLink")],1)]),e._v(" "),i("p",[i("a",{attrs:{href:"https://juejin.cn/post/6844903780337582088",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 happypack 提升 Webpack 项目构建速度 - 掘金 (juejin.cn)"),i("OutboundLink")],1)])])}),[],!1,null,null,null);l.default=a.exports}}]);