(window.webpackJsonp=window.webpackJsonp||[]).push([[513],{2268:function(e,a,s){"use strict";s.r(a);var t=s(14),v=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"利用webpack来优化前端性能-提高性能和体验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用webpack来优化前端性能-提高性能和体验"}},[e._v("#")]),e._v(" 利用webpack来优化前端性能（提高性能和体验）")]),e._v(" "),s("p",[e._v("用webpack优化前端性能是指优化webpack的输出结果，让打包的最终结果在浏览器运行快速高效;")]),e._v(" "),s("ul",[s("li",[e._v("对于 Webpack4，打包项目使用 production 模式，这样会"),s("strong",[e._v("自动开启代码压缩")]),e._v(";")]),e._v(" "),s("li",[e._v("优化图片，对于"),s("strong",[e._v("小图可以使用 base64")]),e._v(" 的方式写入文件中;")]),e._v(" "),s("li",[e._v("按照"),s("strong",[e._v("路由拆分代码")]),e._v("，实现按需加载;")]),e._v(" "),s("li",[e._v("给打包出来的"),s("strong",[e._v("文件名添加哈希，实现浏览器缓存")]),e._v("文件;")]),e._v(" "),s("li",[s("strong",[e._v("压缩代码")]),e._v("。删除多余的代码、注释、简化代码的写法等等方式。可以利用webpack的"),s("code",[e._v("UglifyJsPlugin")]),e._v("和"),s("code",[e._v("ParallelUglifyPlugin")]),e._v("来压缩JS文件， 利用"),s("code",[e._v("cssnano")]),e._v("（css-loader?minimize）来压缩css;")]),e._v(" "),s("li",[s("strong",[e._v("利用CDN加速")]),e._v("。在构建过程中，将引用的静态资源路径修改为CDN上对应的路径。可以利用webpack对于"),s("code",[e._v("output")]),e._v("参数和各loader的"),s("code",[e._v("publicPath")]),e._v("参数来修改资源路径;")]),e._v(" "),s("li",[s("strong",[e._v("删除死代码（Tree Shaking）")]),e._v("。将代码中永远不会走到的片段删除掉。可以通过在启动webpack时追加参数"),s("code",[e._v("--optimize-minimize")]),e._v("来实现;使用 ES6 模块来开启 "),s("strong",[e._v("tree shaking")]),e._v("，这个技术可以移除没有使用的代码;")]),e._v(" "),s("li",[s("strong",[e._v("提取公共代码")]),e._v(";CommonsChunkPlugin;")])]),e._v(" "),s("h3",{attrs:{id:"提高构建-优化打包-速度【要点】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提高构建-优化打包-速度【要点】"}},[e._v("#")]),e._v(" 提高构建（优化打包）速度【要点】")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("使用"),s("code",[e._v("Tree-shaking")]),e._v("和"),s("code",[e._v("Scope Hoisting")]),e._v("来剔除多余代码;")])]),e._v(" "),s("li",[s("p",[e._v("多入口情况下，使用"),s("code",[e._v("CommonsChunkPlugin")]),e._v("来提取公共代码；"),s("strong",[e._v("通过"),s("code",[e._v("externals")]),e._v("配置来提取常用库")])])]),e._v(" "),s("li",[s("p",[e._v("减少文件搜索范围**")]),e._v(" "),s("ul",[s("li",[e._v("比如通过别名")]),e._v(" "),s("li",[e._v("loader 的 test，include & exclude")])])]),e._v(" "),s("li",[s("p",[e._v("Webpack4 "),s("strong",[e._v("默认压缩并行")])])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("babel 也可以缓存编译；通过cacheDirectory选项开启")]),e._v("；"),s("code",[e._v("loader: 'babel-loader?cacheDirectory'")])])]),e._v(" "),s("li",[s("p",[e._v("利用"),s("code",[e._v("DllPlugin")]),e._v("和"),s("code",[e._v("DllReferencePlugin")]),e._v("预编译资源模块 "),s("strong",[e._v("通过"),s("code",[e._v("DllPlugin")]),e._v("来对那些我们引用但是绝对不会修改的npm包来进行预编译，再通过"),s("code",[e._v("DllReferencePlugin")]),e._v("将预编译的模块加载进来。")])])]),e._v(" "),s("li",[s("p",[e._v("使用"),s("code",[e._v("Happypack")]),e._v(" 实现"),s("strong",[e._v("多线程加速编译")])])]),e._v(" "),s("li",[s("p",[e._v("使用"),s("code",[e._v("webpack-uglify-parallel")]),e._v("来"),s("strong",[e._v("提升"),s("code",[e._v("uglifyPlugin")]),e._v("的压缩速度")]),e._v("。 原理上"),s("code",[e._v("webpack-uglify-parallel")]),e._v("采用了多核并行压缩来提升压缩速度")])]),e._v(" "),s("li",[s("p",[e._v("修改source-map配置;")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("productionSourceMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\nconfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("when")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("isProd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("config")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("devtool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'cheap-source-map'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);