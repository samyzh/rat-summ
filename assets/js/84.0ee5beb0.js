(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{1098:function(t,s,a){t.exports=a.p+"assets/img/c286b5f9a47044a8ba9ea9dc2d14919a~tplv-k3u1fbpfcp-watermark.b33a1d05.png"},1099:function(t,s,a){t.exports=a.p+"assets/img/294719a33b6f43fbad998572870d52ae~tplv-k3u1fbpfcp-watermark.e9f90b96.png"},1100:function(t,s,a){t.exports=a.p+"assets/img/8abf5cc687ef421daefe62b37bf51ef1~tplv-k3u1fbpfcp-watermark.91262ef7.png"},1101:function(t,s,a){t.exports=a.p+"assets/img/ce1f7fae7a5e4cc7ac50ff6cc500cb40~tplv-k3u1fbpfcp-watermark.091edf43.png"},2009:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"读源码分享"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#读源码分享"}},[t._v("#")]),t._v(" 读源码分享")]),t._v(" "),e("h3",{attrs:{id:"先整体-后细节"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先整体-后细节"}},[t._v("#")]),t._v(" 先整体 - 后细节")]),t._v(" "),e("ul",[e("li",[t._v("先弄清楚源码分为哪几个模块，整套流程是怎么将各个模块串起来的。")]),t._v(" "),e("li",[t._v("然后细化了解每个模块的核心原理。")])]),t._v(" "),e("h3",{attrs:{id:"站在别人的肩膀上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#站在别人的肩膀上"}},[t._v("#")]),t._v(" 站在别人的肩膀上")]),t._v(" "),e("ul",[e("li",[t._v("不用一股脑扎进源码仓库里一点点啃，这样很低效，适用于对源码较为了解的人")]),t._v(" "),e("li",[t._v("推荐先读别人的源码简介，源码分析（推荐："),e("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js 技术揭秘"),e("OutboundLink")],1),t._v("），弄清楚脉络，还有每个部分的大概功能和核心流程。心里带着思路去看源码实现。")]),t._v(" "),e("li",[t._v("多数情况不需要逐行代码的细究，但针对某些核心功能的实现需要细究，例如：虚拟dom、diff算法、数据驱动、响应式实现以及组件化等核心的功能的核心实现推荐细看。")])]),t._v(" "),e("h3",{attrs:{id:"读多遍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#读多遍"}},[t._v("#")]),t._v(" 读多遍")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("一次粗读")]),t._v("：看整体流程，看每个模块的核心功能和职责，体会平时写的代码在源码里面经过了什么步骤体现到了页面上。")]),t._v(" "),e("li",[e("strong",[t._v("二次精读")]),t._v("：看细节实现，弄清楚核心模块的实现方式（如弄懂diff算法思路，最好自己动手实现）。")]),t._v(" "),e("li",[e("strong",[t._v("三次领悟")]),t._v("：领悟源码整体架构和设计思想，体会每个模块之间如何配合协作，架构如何组织。")])]),t._v(" "),e("h2",{attrs:{id:"vue简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue简介"}},[t._v("#")]),t._v(" vue简介")]),t._v(" "),e("h3",{attrs:{id:"几个核心思想"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#几个核心思想"}},[t._v("#")]),t._v(" 几个核心思想")]),t._v(" "),e("ul",[e("li",[t._v("数据驱动")]),t._v(" "),e("li",[t._v("组件化")]),t._v(" "),e("li",[t._v("虚拟dom、diff局部最优更新")])]),t._v(" "),e("h3",{attrs:{id:"核心知识点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心知识点"}},[t._v("#")]),t._v(" 核心知识点")]),t._v(" "),e("ul",[e("li",[t._v("数据驱动分析\n"),e("ul",[e("li",[t._v("Vue 实例化")]),t._v(" "),e("li",[t._v("Vue 实例挂载")]),t._v(" "),e("li",[t._v("render")]),t._v(" "),e("li",[t._v("Virtual DOM")]),t._v(" "),e("li",[t._v("createElement")]),t._v(" "),e("li",[t._v("update")])])]),t._v(" "),e("li",[t._v("组件化分析\n"),e("ul",[e("li",[t._v("createComponent")]),t._v(" "),e("li",[t._v("patch")]),t._v(" "),e("li",[t._v("合并配置")]),t._v(" "),e("li",[t._v("生命周期")]),t._v(" "),e("li",[t._v("组件注册")]),t._v(" "),e("li",[t._v("异步组件")])])]),t._v(" "),e("li",[t._v("响应式原理分析\n"),e("ul",[e("li",[t._v("响应式对象 / 依赖收集")]),t._v(" "),e("li",[t._v("派发更新 / nextTick")]),t._v(" "),e("li",[t._v("检测变化的注意事项")]),t._v(" "),e("li",[t._v("计算属性 VS 侦听属性")]),t._v(" "),e("li",[t._v("组件更新")])])])]),t._v(" "),e("h4",{attrs:{id:"总体把握"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总体把握"}},[t._v("#")]),t._v(" 总体把握")]),t._v(" "),e("ul",[e("li",[t._v("template风格、对象配置风格")]),t._v(" "),e("li",[t._v("虚拟dom思想（js对象操作代替dom操作）")]),t._v(" "),e("li",[t._v("diff算法思想（同层比较，添加、移动、删除）")]),t._v(" "),e("li",[t._v("组件化思想（组件编译、组件通信）")]),t._v(" "),e("li",[t._v("数据响应式（依赖收集、派发更新，发布订阅）")])]),t._v(" "),e("h3",{attrs:{id:"目录介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录介绍"}},[t._v("#")]),t._v(" 目录介绍")]),t._v(" "),e("p",[t._v("Vue.js 的源码在 src 目录下，其目录结构如下。")]),t._v(" "),e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("src\n├── compiler        # 编译相关 \n├── core            # 核心代码 \n├── platforms       # 不同平台的支持\n├── server          # 服务端渲染\n├── sfc             # .vue 文件解析\n├── shared          # 共享代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("ul",[e("li",[e("strong",[t._v("compiler")]),t._v("：编译相关的代码。它包括把模板解析成 ast 语法树，ast 语法树优化，代码生成等功能。")]),t._v(" "),e("li",[e("strong",[t._v("core")]),t._v("：核心代码，包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等。")]),t._v(" "),e("li",[e("strong",[t._v("platform")]),t._v("：不同平台的支持，是 Vue.js 的入口，2 个目录代表 2 个主要入口，分别打包成运行在 web 上和 weex 上的 Vue.js。")]),t._v(" "),e("li",[e("strong",[t._v("server")]),t._v('：服务端渲染，把组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将静态标记"混合"为客户端上完全交互的应用程序。')]),t._v(" "),e("li",[e("strong",[t._v("sfc")]),t._v("： .vue 文件内容解析成一个 JavaScript 的对象。")]),t._v(" "),e("li",[e("strong",[t._v("shared")]),t._v("：浏览器端和服务端所共享的工具方法。")])]),t._v(" "),e("h3",{attrs:{id:"源码构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码构建"}},[t._v("#")]),t._v(" 源码构建")]),t._v(" "),e("p",[t._v("基于 "),e("a",{attrs:{href:"https://github.com/rollup/rollup",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rollup"),e("OutboundLink")],1),t._v(" 构建，相关配置在 scripts 目录下。")]),t._v(" "),e("p",[t._v("构建时通过不同的命令执行不同的脚本，去读取不同用处的配置，然后生成适合各种场景的Vue源码。\n"),e("strong",[t._v("vue2.0有以下几种场景：")])]),t._v(" "),e("ul",[e("li",[t._v("浏览器端")]),t._v(" "),e("li",[t._v("服务端渲染")]),t._v(" "),e("li",[t._v("配合weex平台在客户端使用")])]),t._v(" "),e("h3",{attrs:{id:"类型检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型检查"}},[t._v("#")]),t._v(" 类型检查")]),t._v(" "),e("p",[t._v("在vue2.x版本中使用 "),e("a",{attrs:{href:"https://flow.org/en/docs/getting-started/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flow"),e("OutboundLink")],1),t._v(" 作为js静态类型检查工具，3.x版本使用typescript实现，自带类型检查。")]),t._v(" "),e("h2",{attrs:{id:"数据驱动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动"}},[t._v("#")]),t._v(" 数据驱动")]),t._v(" "),e("p",[t._v("vue核心思想之一就是"),e("code",[t._v("数据驱动")]),t._v("，指"),e("code",[t._v("数据")]),t._v("驱动生成"),e("code",[t._v("视图")]),t._v("，通过修改数据自动实现对视图的修改。这里主要分析"),e("strong",[t._v("模板和数据是如何渲染成最终的DOM")]),t._v("的。")]),t._v(" "),e("h3",{attrs:{id:"new-vue的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-vue的过程"}},[t._v("#")]),t._v(" new Vue的过程")]),t._v(" "),e("p",[t._v("Vue 初始化主要就干了几件事情，")]),t._v(" "),e("ul",[e("li",[t._v("合并配置")]),t._v(" "),e("li",[t._v("初始化生命周期")]),t._v(" "),e("li",[t._v("初始化事件中心")]),t._v(" "),e("li",[t._v("初始化渲染")]),t._v(" "),e("li",[t._v("初始化 data、props、computed、watcher 等等。")])]),t._v(" "),e("h3",{attrs:{id:"实例挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例挂载"}},[t._v("#")]),t._v(" 实例挂载")]),t._v(" "),e("p",[t._v("$mount方法")]),t._v(" "),e("ul",[e("li",[t._v("Vue 不能挂载在 body、html 这样的根节点上；")]),t._v(" "),e("li",[t._v("如果没有定义 render 方法，则会把 el 或者 template 字符串转换成 render 方法")]),t._v(" "),e("li",[t._v("在 Vue 2.0 版本中所有 Vue 的组件的渲染最终都需要 render 方法，是一个“在线编译”的过程；")])]),t._v(" "),e("p",[e("strong",[t._v("挂载组件：")]),t._v(" "),e("code",[t._v("mountComponent")]),t._v("核心就是先实例化一个"),e("code",[t._v("渲染Watcher")]),t._v("，在它的回调函数中会调用 "),e("code",[t._v("updateComponent")]),t._v(" 方法，在此方法中调用 "),e("code",[t._v("vm._render")]),t._v(" 方法先生成虚拟 "),e("code",[t._v("Node")]),t._v("，最终调用 "),e("code",[t._v("vm._update")]),t._v(" 更新 DOM。")]),t._v(" "),e("p",[e("strong",[t._v("Watcher在这里起到两个作用:")])]),t._v(" "),e("ul",[e("li",[t._v("初始化的时候会执行回调函数;")]),t._v(" "),e("li",[t._v("当 vm 实例中的监测的数据发生变化的时候执行回调函数")])]),t._v(" "),e("h3",{attrs:{id:"render渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#render渲染"}},[t._v("#")]),t._v(" render渲染")]),t._v(" "),e("ul",[e("li",[t._v("把 template 编译成 render 方法【编译过程后面专门介绍】")]),t._v(" "),e("li",[t._v("createElement创建dom节点")])]),t._v(" "),e("h3",{attrs:{id:"虚拟dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[t._v("#")]),t._v(" 虚拟dom")]),t._v(" "),e("ul",[e("li",[t._v("由于dom操作耗时十分长，且dom对象的体积很大，单个div的dom属性就有"),e("code",[t._v("294")]),t._v("个之多；")]),t._v(" "),e("li",[t._v("Virtual DOM 就是用一个原生的 JS 对象去描述一个 DOM 节点，所以它比创建一个 DOM 的代价要小很多。")]),t._v(" "),e("li",[t._v("VNode 是对真实 DOM 的一种抽象描述，它的核心定义无非就几个关键属性，标签名、数据、子节点、键值等，其它属性都是用来扩展 VNode 的灵活性以及实现一些特殊 feature 的。由于 VNode 只是用来映射到真实 DOM 的渲染，不需要包含操作 DOM 的方法，因此它是非常轻量和简单的。")]),t._v(" "),e("li",[t._v("Virtual DOM到真实的dom需要经过以下过程：VNode 的 create、diff、patch")])]),t._v(" "),e("h3",{attrs:{id:"createelement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#createelement"}},[t._v("#")]),t._v(" createElement")]),t._v(" "),e("p",[t._v("判断第一个参数tag的类型，分为普通html标签、组件和其他类型，将子节点规范成 VNode 类型，递归整个树完成虚拟dom树的构建。")]),t._v(" "),e("p",[t._v("此方法是render函数的参数。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("createElement")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" update")]),t._v(" "),e("p",[e("strong",[t._v("调用的时机")]),t._v("：一个是首次渲染，一个是数据更新的时候；")]),t._v(" "),e("p",[t._v("首次渲染会将虚拟dom树整个渲染为dom节点，数据更新的时候会经过"),e("code",[t._v("diff")]),t._v("过程，只选取修改的虚拟dom节点进行局部更新。")]),t._v(" "),e("p",[t._v("update 的核心就是调用 "),e("code",[t._v("vm.__patch__")]),t._v(" 方法，不同的平台实现不一样，web平台生成dom节点，ssr服务端渲染生成html字符串。")]),t._v(" "),e("p",[t._v("dom树节点的"),e("code",[t._v("插入")]),t._v("顺序是"),e("code",[t._v("先子后父")]),t._v("，")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("vue初始渲染的工作流程：")])])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("new Vue` ➜ `init` ➜ `$mount` ➜ `compile` ➜ `render` ➜ `vnode` ➜ `patch` ➜ `dom\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"组件化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[t._v("#")]),t._v(" 组件化")]),t._v(" "),e("ul",[e("li",[t._v("组件化，就是把页面拆分成多个组件 (component)，每个组件依赖的 CSS、JavaScript、模板、图片等资源放在一起开发和维护。")]),t._v(" "),e("li",[t._v("组件是资源独立的，组件在系统内部可复用，组件和组件之间可以嵌套。")])]),t._v(" "),e("h3",{attrs:{id:"createcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#createcomponent"}},[t._v("#")]),t._v(" createComponent")]),t._v(" "),e("p",[t._v("在createElement里面调用，判断tag类型为组件时调用，用来"),e("strong",[t._v("将组件转换成虚拟dom")]),t._v("。")]),t._v(" "),e("p",[t._v("核心步骤：")]),t._v(" "),e("ul",[e("li",[t._v("构造子类构造函数")]),t._v(" "),e("li",[t._v("安装组件钩子函数")]),t._v(" "),e("li",[t._v("实例化 vnode")])]),t._v(" "),e("h3",{attrs:{id:"vue-extend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-extend"}},[t._v("#")]),t._v(" Vue.extend")]),t._v(" "),e("ul",[e("li",[t._v("作用就是构造一个 Vue 的子类，这个子类就是组件本身，使用原型继承把纯对象转换一个继承于 Vue 的构造器 Sub 并返回")]),t._v(" "),e("li",[t._v("Sub 扩展了属性，如扩展 options、添加全局 API 等；并且对配置中的 props 和 computed 做了初始化工作；")]),t._v(" "),e("li",[t._v("最后对于这个 Sub 构造函数做了缓存，避免多次执行 Vue.extend 的时候对同一个子组件重复构造。")])]),t._v(" "),e("h3",{attrs:{id:"patch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#patch"}},[t._v("#")]),t._v(" patch")]),t._v(" "),e("p",[t._v("patch主要完成组件的"),e("code",[t._v("渲染")]),t._v("工作。")]),t._v(" "),e("p",[t._v("createComponent过程把组件转换成了VNode，patch过程会调用createElm把 VNode 转换成真正的 DOM 节点。")]),t._v(" "),e("ul",[e("li",[t._v("createComponent:"),e("code",[t._v("递归实现深度遍历")]),t._v("整个VNode树，用"),e("code",[t._v("先子后父")]),t._v("的方式插入dom树")]),t._v(" "),e("li",[t._v("最终根节点VNode转化为dom后挂载到"),e("code",[t._v("#app")]),t._v("的节点上，且挂载元素不能是"),e("code",[t._v("html")]),t._v("或"),e("code",[t._v("body")])]),t._v(" "),e("li",[t._v("patch整体流程：createComponent ➜ 自组件初始化 ➜ 子组件render ➜ 自组件patch")])]),t._v(" "),e("h3",{attrs:{id:"合并配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并配置"}},[t._v("#")]),t._v(" 合并配置")]),t._v(" "),e("p",[t._v("vue自身定义了一些默认配置，同时又可以在初始化阶段传入一些定义配置，然后去 merge 默认配置，来达到定制化不同需求的目的。")]),t._v(" "),e("p",[t._v("vue组件其实是一个js对象，我们写组件其实就是在写各种配置，这个配置在构建组件的时候会调用"),e("code",[t._v("Vue.extent")]),t._v("方法构建成一个组件类(因此我们组件内部访问到的"),e("code",[t._v("this")]),t._v("才是Vue的实例)，那么在组件类实例化 "),e("code",[t._v("new Vue()")]),t._v(" 的过程中，就会做"),e("code",[t._v("合并配置")]),t._v("这件事。")]),t._v(" "),e("p",[t._v("合并配置分为两种方式：")]),t._v(" "),e("ul",[e("li",[t._v("外部初始化调用"),e("code",[t._v("new Vue")]),t._v("（例如挂载#app的时候）")]),t._v(" "),e("li",[t._v("组件场景")])]),t._v(" "),e("p",[t._v("主要合并以下几方面的配置：")]),t._v(" "),e("ul",[e("li",[t._v("mixin的配置")]),t._v(" "),e("li",[t._v("extends继承的配置")]),t._v(" "),e("li",[t._v("编写的对象组件配置")])]),t._v(" "),e("h3",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("p",[e("code",[t._v("生命周期")]),t._v("是vue在运行期间的各个关键节点运行的"),e("code",[t._v("钩子函数")]),t._v("，以便可以在特定场景做特定的事。")]),t._v(" "),e("ul",[e("li",[t._v("生命周期依次有：\nbeforeCreate ➜ created ➜ beforeMount ➜ mounted ➜ beforeUpdate ➜ updated ➜ beforeDestroy ➜ destroyed")]),t._v(" "),e("li",[t._v("除此之外还有两个keep-alive中使用的生命周期：\nactivated ➜ deactivated")]),t._v(" "),e("li",[t._v("生命周期是一个数组，可能有多个钩子函数（合并配置中自带的和用户写的？）")]),t._v(" "),e("li",[t._v("父子组件创建挂载执行顺序\n父beforeCreate ➜ 父create ➜ 父beforeMount ➜ 子beforeCreate ➜ 子created ➜ 子mounted ➜ 父mounted")]),t._v(" "),e("li",[t._v("更新\n父beforeUpdate ➜ 子beforeUpdate ➜ 子updated ➜ 父updated")]),t._v(" "),e("li",[t._v("销毁\n父beforeDestroy ➜ 子beforeDestroy ➜ 子destroyed ➜ 父destroyed")])]),t._v(" "),e("p",[e("strong",[t._v("beforeCreate & created")])]),t._v(" "),e("ul",[e("li",[t._v("调用在实例化&初始化state（props、data、methods、watch、computed 等属性）前后")]),t._v(" "),e("li",[t._v("故在beforeCreate方法中无法使用"),e("code",[t._v("this")]),t._v("访问当前实例，也无法访问data、props等；")]),t._v(" "),e("li",[t._v("使用场景：这两个方法可用来和后端交互，created做渲染前的数据初始化操作；不可访问组件dom；")]),t._v(" "),e("li",[t._v("父子组建执行顺序"),e("code",[t._v("先父后子")])])]),t._v(" "),e("p",[e("strong",[t._v("beforeMount & mounted")])]),t._v(" "),e("ul",[e("li",[t._v("调用在 DOM 挂载前后")]),t._v(" "),e("li",[t._v("beforeMount钩子函数执行顺序"),e("code",[t._v("先父后子")]),t._v("，mounted钩子函数执行顺序"),e("code",[t._v("先子后父")])]),t._v(" "),e("li",[t._v("使用场景：这两个方法可用来和后端交互；mounted中可操作dom；访问"),e("code",[t._v("ref")])])]),t._v(" "),e("p",[e("strong",[t._v("beforeUpdate & updated")])]),t._v(" "),e("ul",[e("li",[t._v("beforeUpdate数据更新后更新dom前，updated调用在更新dom前后")])]),t._v(" "),e("p",[e("strong",[t._v("beforeDestroy & destroyed")])]),t._v(" "),e("ul",[e("li",[t._v("调用在实例销毁前后")]),t._v(" "),e("li",[t._v("销毁操作：parent 的 $children 中删掉自身，删除 watcher")]),t._v(" "),e("li",[t._v("使用场景：beforeDestroy可解除自己绑定的事件监听等")])]),t._v(" "),e("p",[e("strong",[t._v("activated & deactivated")])]),t._v(" "),e("ul",[e("li",[t._v("调用在keep-alive激活后和即将离开激活后")])]),t._v(" "),e("p",[e("strong",[t._v("生命周期示意图")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(1098),alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"组件注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件注册"}},[t._v("#")]),t._v(" 组件注册")]),t._v(" "),e("ul",[e("li",[t._v("全局注册"),e("code",[t._v("Vue.component(tagName, options)")]),t._v(", 挂载到"),e("code",[t._v("Vue.options.components")]),t._v("上，所有组件均可访问；")]),t._v(" "),e("li",[t._v("局部注册"),e("code",[t._v("components:{componentName: component}")]),t._v(", 挂载到"),e("code",[t._v("vm.$options.components")]),t._v("上，仅父组件可访问；")]),t._v(" "),e("li",[t._v("解析template模版遇到组件时，优先寻找vm.$options.components上的局部组件，找不着再寻找Vue.options.components上的全局组件；")]),t._v(" "),e("li",[t._v("注册组件的时候，id 可以是连字符、驼峰或首字母大写的形式")])]),t._v(" "),e("h3",{attrs:{id:"异步组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步组件"}},[t._v("#")]),t._v(" 异步组件")]),t._v(" "),e("p",[t._v("Vue有 "),e("code",[t._v("3")]),t._v(" 种异步组件，实现了 loading、resolve、reject、timeout 4 种状态。异步组件实现的本质是 2 次渲染，除了 0 delay 的高级异步组件第一次直接渲染成 loading 组件外，其它都是第一次渲染生成一个注释节点，当异步获取组件成功后，再通过 forceRender 强制重新渲染，这样就能正确渲染出我们异步加载的组件了。")]),t._v(" "),e("ol",[e("li",[t._v("普通函数异步组件: 通过resove回调处理")]),t._v(" "),e("li",[t._v("Promise 异步组件：promise.then处理")]),t._v(" "),e("li",[t._v("高级异步组件: 增加loading、error、delay、timeout等，处理了加载占位、错误处理、超时时间等;")])]),t._v(" "),e("h2",{attrs:{id:"深入响应式原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深入响应式原理"}},[t._v("#")]),t._v(" 深入响应式原理")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1099),alt:"img"}})]),t._v(" "),e("p",[e("strong",[t._v("参考")]),t._v("："),e("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ustbhuangyi.github.io/vue-analysi…"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"响应式对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式对象"}},[t._v("#")]),t._v(" 响应式对象")]),t._v(" "),e("p",[t._v("响应式对象，核心就是利用 "),e("code",[t._v("Object.defineProperty")]),t._v(" 给数据"),e("strong",[t._v("递归")]),t._v("添加了 "),e("code",[t._v("getter")]),t._v(" 和 "),e("code",[t._v("setter")]),t._v("，目的就是为了在我们访问数据以及写数据的时候能自动执行一些逻辑：getter 做的事情是"),e("code",[t._v("依赖收集")]),t._v("，setter 做的事情是"),e("code",[t._v("派发更新")]),t._v("。本质上是"),e("code",[t._v("发布订阅模式（观察者模式）")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"依赖收集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖收集"}},[t._v("#")]),t._v(" 依赖收集")]),t._v(" "),e("p",[t._v("所以在 vm._render() 过程中，会触发所有数据的 getter，这样实际上已经完成了一个依赖收集的过程。")]),t._v(" "),e("p",[t._v("在定义相应式对象的的getter函数里，触发"),e("code",[t._v("dep.depend")]),t._v("做依赖收集，将获取属性的地方全部加入订阅者列表中，当数据发生变化时，通过遍历订阅者列表实现变更发布。")]),t._v(" "),e("p",[t._v("再次render时会先做依赖清除，再次进行新的依赖收集，这样做是为了处理v-if条件渲染的数据不用再派发更新了。")]),t._v(" "),e("h3",{attrs:{id:"派发更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#派发更新"}},[t._v("#")]),t._v(" 派发更新")]),t._v(" "),e("p",[t._v("实际上就是当数据发生变化的时候，触发 setter 逻辑，把在依赖过程中订阅的的所有观察者，也就是 watcher，都触发它们的 update 过程，这个过程又利用了队列做了进一步优化，在 nextTick 后执行所有 watcher 的 run，最后执行它们的回调函数。")]),t._v(" "),e("p",[t._v("通过setter来触发变量的更新，这里引入了一个队列的概念，这也是 Vue 在做派发更新的时候的一个优化的点，它并不会每次数据改变都触发更新，而是先添加到一个队列里，然后在 nextTick 后执行更新，可以理解为等一段时间一起更新。")]),t._v(" "),e("p",[e("strong",[t._v("队列排序")]),t._v(" queue.sort((a, b) => a.id - b.id) 对队列做了从小到大的排序，这么做主要有以下要确保以下几点：")]),t._v(" "),e("ol",[e("li",[t._v("组件的更新由父到子；因为父组件的创建过程是先于子的，所以 watcher 的创建也是先父后子，执行顺序也应该保持先父后子。")]),t._v(" "),e("li",[t._v("用户的自定义 watcher 要优先于渲染 watcher 执行；因为用户自定义 watcher 是在渲染 watcher 之前创建的。")]),t._v(" "),e("li",[t._v("如果一个组件在父组件的 watcher 执行期间被销毁，那么它对应的 watcher 执行都可以被跳过，所以父组件的 watcher 应该先执行。")])]),t._v(" "),e("h3",{attrs:{id:"nexttick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[t._v("#")]),t._v(" nextTick")]),t._v(" "),e("p",[t._v("此方法可以在数据修改触发dom更新完成之后调用。 在浏览器环境中，常见的 macro task 有 setTimeout、MessageChannel、postMessage、setImmediate；常见的 micro task 有 MutationObsever 和 Promise.then。")]),t._v(" "),e("h3",{attrs:{id:"检测变化的注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检测变化的注意事项"}},[t._v("#")]),t._v(" 检测变化的注意事项")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("给对象添加属性不能被"),e("code",[t._v("Object.defineProperty")]),t._v("监测到，需要通过"),e("code",[t._v("Vue.set")]),t._v("方法手动告诉vue收集这个依赖并且派发更新。")])]),t._v(" "),e("li",[e("p",[t._v("vue不能直接检测到"),e("code",[t._v("数组项的赋值")]),t._v("和"),e("code",[t._v("直接修改长度")]),t._v("的，但是可以监测到"),e("code",[t._v("splice")]),t._v("等方法的修改，原因在于")]),t._v(" "),e("ul",[e("li",[t._v("赋值：无法给数组设置"),e("code",[t._v("defineProperty")]),t._v("，可通过"),e("code",[t._v("Vue.set")]),t._v("实现对数组项的修改；")]),t._v(" "),e("li",[t._v("通过数组方法修改：vue在"),e("code",[t._v("Observer")]),t._v("类中单独对数组做了处理，对数组对能增加数组长度的 3 个方法重写"),e("code",[t._v("push")]),t._v("、"),e("code",[t._v("unshift")]),t._v("、"),e("code",[t._v("sueplice")]),t._v("，现将方法原有逻辑执行完，再手动把新添加的值变成一个响应式对象，并且派发更新。")])])]),t._v(" "),e("li",[e("p",[t._v("对象属性的删除可通过"),e("code",[t._v("Vue.del")]),t._v("方法，确保触发更新视图。")])])]),t._v(" "),e("h3",{attrs:{id:"计算属性-vs-侦听属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算属性-vs-侦听属性"}},[t._v("#")]),t._v(" 计算属性 VS 侦听属性")]),t._v(" "),e("blockquote",[e("h4",{attrs:{id:"computed和watch区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed和watch区别"}},[t._v("#")]),t._v(" computed和watch区别")])]),t._v(" "),e("h4",{attrs:{id:"计算属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算属性"}},[t._v("#")]),t._v(" 计算属性")]),t._v(" "),e("p",[e("strong",[t._v("计算属性的触发有以下两种情况：")])]),t._v(" "),e("ul",[e("li",[t._v("主动访问：当计算属性被访问时触发getter函数，执行用户返回的计算结果，如果返回值发生变化才触发渲染更新（有缓存，依赖发生变化才执行）。")]),t._v(" "),e("li",[t._v("依赖属性更新：计算属性会成为依赖变量的订阅者，依赖变量发生改变则触发计算属性重新计算。")]),t._v(" "),e("li",[t._v("计算属性有 "),e("code",[t._v("lazy")]),t._v(" 和 "),e("code",[t._v("active")]),t._v("两种模式，active模式依赖更新立即计算，lazy模式依赖变化仅设置"),e("code",[t._v("this.dirty = true")]),t._v("，等访问计算属性时再重新计算，并加入缓存。")])]),t._v(" "),e("ol",[e("li",[t._v("计算属性的和侦听属性初始化都发生在 Vue 实例初始化阶段的 initState 函数中，先初始化计算属性后监听属性。")]),t._v(" "),e("li",[e("code",[t._v("延时计算")]),t._v("计算属性不会立刻求值（除非设置"),e("code",[t._v("immediate: true")]),t._v("）")]),t._v(" "),e("li",[t._v("计算属性可以通过闭包来实现传参：")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("computed"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** do something */")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h4",{attrs:{id:"监听属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监听属性"}},[t._v("#")]),t._v(" 监听属性")]),t._v(" "),e("ul",[e("li",[t._v("监听属性相当于主动订阅了属性的变化，属性发生变化时执行回调函数")]),t._v(" "),e("li",[t._v("监听属性的watcher执行优先级高于渲染watcher；")]),t._v(" "),e("li",[e("strong",[t._v("deep 设置为 true")]),t._v(" 用于监听对象内部值的变化")]),t._v(" "),e("li",[e("strong",[t._v("immediate 设置为 true")]),t._v(" 将立即以表达式的当前值触发回调")])]),t._v(" "),e("p",[t._v("本质上侦听属性也是基于 Watcher 实现的，它是一个 user watcher。")]),t._v(" "),e("p",[e("strong",[t._v("计算属性 vs 监听属性")]),t._v(" 从应用场景看")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("计算属性")]),t._v("适合用在模板渲染中，某个值是依赖了其它的响应式对象甚至是计算属性计算而来；")]),t._v(" "),e("li",[e("code",[t._v("侦听属性")]),t._v("适用于观测某个值的变化去完成一段复杂的业务逻辑（例如执行异步或开销较大的操作）。")])]),t._v(" "),e("p",[e("strong",[t._v("watcher的 4 种类型")]),t._v("："),e("code",[t._v("deep")]),t._v("、"),e("code",[t._v("user")]),t._v("、"),e("code",[t._v("computed")]),t._v("、"),e("code",[t._v("sync")])]),t._v(" "),e("ul",[e("li",[t._v("deep：可以监听到对象属性的属性的修改变化，递归遍历对象所有属性，订阅所有子孙属性的变化（设置方法"),e("code",[t._v("deep: true")]),t._v("）；")]),t._v(" "),e("li",[t._v("user：watch里面添加的侦听属性")]),t._v(" "),e("li",[t._v("computed：computed里面添加的监听")]),t._v(" "),e("li",[t._v("sync：属性变化后同步执行更新，不会加入缓冲队列在 nextTick 后执行。（设置方法"),e("code",[t._v("immediate: true")]),t._v("）")])]),t._v(" "),e("p",[e("strong",[t._v("计算属性 vs 方法")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("缓存：")]),t._v(" computed 是可以缓的，methods 不能缓存；只要相关依赖没有改变，多次访问计算属性得到的值是之前缓存的计算结果，不会多次执行；调用方法将总会再次执行函数；")]),t._v(" "),e("li",[e("strong",[t._v("延时计算：")]),t._v(" 计算属性主要对响应式属性的依赖，没有响应式依赖不会自动更新：如这样只会计算一次"),e("code",[t._v("computed: {now: ()=>Date.now()}")])]),t._v(" "),e("li",[t._v("值得注意的是计算属性可以通过返回一个函数形成闭包来实现"),e("code",[t._v("传参")]),t._v("；")])]),t._v(" "),e("h3",{attrs:{id:"组件更新-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件更新-diff"}},[t._v("#")]),t._v(" 组件更新（diff）")]),t._v(" "),e("p",[t._v("组件更新核心是响应式数据监控到数据的改变，重新生成了虚拟dom树，然后通过diff算法计算出前后虚拟dom树的差异点，更新dom时只更新变化的部分。")]),t._v(" "),e("p",[e("strong",[t._v("快问快答：")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("为什么要diff？")])])]),t._v(" "),e("p",[e("strong",[t._v("答：")]),t._v(" O(n^3) 意味着如果要展示1000个节点，就要依次执行上十亿次的比较，无法承受大数据量的对比。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("直接比较和修改两个树的复杂度为什么是"),e("code",[t._v("n^3")]),t._v("？")])])]),t._v(" "),e("p",[e("strong",[t._v("答：")]),t._v(" 老树的每一个节点都去遍历新树的节点，直到找到新树对应的节点。那么这个流程就是 O(n^2)，再紧接着找到不同之后，再计算最短修改距离然后修改节点，这里是 O(n^3)。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("diff的策略是什么？有什么根据？")])])]),t._v(" "),e("p",[e("strong",[t._v("答：")]),t._v("\n1、Web UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计，因此仅进行同层比较。\n2、如果父节点不同，放弃对子节点的比较，直接删除旧节点然后添加新的节点重新渲染；\n3、如果子节点有变化，Virtual DOM不会计算变化的是什么，而是重新渲染。\n4、同级多个节点可通过唯一的key对比异同；")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("diff流程是什么？")])])]),t._v(" "),e("p",[e("strong",[t._v("答：")]),t._v("\n新旧节点不同：创建新节点 ➜ 更新父占位符节点 ➜ 删除旧节点；\n新旧节点相同且没有子节点：不变；\n新旧节点相同且都有子节点：遍历子节点同级比较，做移动、添加、删除三个操作，具体见下图； "),e("img",{attrs:{src:a(1100),alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"props属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props属性"}},[t._v("#")]),t._v(" Props属性")]),t._v(" "),e("p",[t._v("用作父组件给自组件传参，")]),t._v(" "),e("ol",[e("li",[t._v("规范化：将props属性都变成对象（原来可能是数组）；")]),t._v(" "),e("li",[t._v("初始化：校验数据类型、响应式处理、代理（this.name 变成 this._props.name）;")]),t._v(" "),e("li",[t._v("更新：一种是prop值被修改触发this._prop的setter；另一种是对象属性修改走对象响应式；")])]),t._v(" "),e("h2",{attrs:{id:"编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[t._v("#")]),t._v(" 编译")]),t._v(" "),e("p",[t._v("编译的核心是把 "),e("code",[t._v("template")]),t._v(" 模板编译成 "),e("code",[t._v("render")]),t._v(" 函数。")]),t._v(" "),e("p",[e("strong",[t._v("vue有两种编译模式：")])]),t._v(" "),e("ul",[e("li",[t._v("运行时编译：在运行时才做模版编译（ Runtime + Compiler ）")]),t._v(" "),e("li",[t._v("打包编译：借助 webpack 的 "),e("code",[t._v("vue-loader")]),t._v(" 事先把模板编译成 render函数（Runtime only ）")])]),t._v(" "),e("h3",{attrs:{id:"入口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#入口"}},[t._v("#")]),t._v(" 入口")]),t._v(" "),e("p",[t._v("运行时编译：入口compileToFunctions")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解析模板字符串生成 AST")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优化语法树")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("optimize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成代码")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"parse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parse"}},[t._v("#")]),t._v(" parse")]),t._v(" "),e("p",[e("code",[t._v("AST")]),t._v("：种抽象语法树，是对源代码的抽象语法结构的树状表现形式。")]),t._v(" "),e("p",[t._v("主要采用"),e("code",[t._v("标记化算法")]),t._v("的思路，解析器内部维护一个"),e("code",[t._v("状态机")]),t._v("；")]),t._v(" "),e("ul",[e("li",[t._v("解析流程会遍历html字符串，随着索引index的后移，状态机status会更新现在所处的解析状态；")]),t._v(" "),e("li",[t._v("根据不同的解析状态使用不同的解析方法，当前解析状态完成后，再进入下一个解析状态；")]),t._v(" "),e("li",[t._v("如此循环往复解析完整个树。")])]),t._v(" "),e("p",[t._v("parse 的目标是把 template 模板字符串转换成 AST 树，它是一种用 JavaScript 对象的形式来描述整个模板。那么整个 parse 的过程是利用正则表达式顺序解析模板，当解析到开始标签、闭合标签、文本的时候都会分别执行对应的回调函数，来达到构造 AST 树的目的。")]),t._v(" "),e("p",[t._v("AST 元素节点总共有 3 种类型，type 为 1 表示是普通元素，为 2 表示是表达式，为 3 表示是纯文本。【换成常量更好】")]),t._v(" "),e("ul",[e("li",[t._v("解析template模版用到的正则")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" attribute "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ncname "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[a-zA-Z_][\\\\w\\\\-\\\\.]*'")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" qnameCapture "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("((?:")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("ncname"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\\\\:)?")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("ncname"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" startTagOpen "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("^<")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("qnameCapture"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始标签打开")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" startTagClose "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\s*(\\/?)>")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始标签关闭")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" endTag "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("^<\\\\/")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("qnameCapture"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("[^>]*>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签结束")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" doctype "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^<!DOCTYPE [^>]+>")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文档类型节点")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" comment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^<!\\--")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释节点")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" conditionalComment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^<!\\[")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("ul",[e("li",[t._v("解析模版流程图")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(1101),alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"optimize"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optimize"}},[t._v("#")]),t._v(" optimize")]),t._v(" "),e("p",[t._v("优化AST树的原因：处理响应式、标记静态节点、处理指令等")]),t._v(" "),e("p",[e("strong",[t._v("静态节点的判断方法：")])]),t._v(" "),e("ul",[e("li",[t._v("如果是表达式，就是非静态；如果是纯文本，就是静态；")]),t._v(" "),e("li",[t._v("普通元素用了 "),e("code",[t._v("v-pre")]),t._v(" 指令，是静态;")]),t._v(" "),e("li",[t._v("普通元素满足下面所有条件则是静态：\n"),e("ul",[e("li",[t._v("没有使用 v-if、v-for")]),t._v(" "),e("li",[t._v("没有使用其它指令（不包括 v-once）")]),t._v(" "),e("li",[t._v("非内置组件，是平台保留的标签")]),t._v(" "),e("li",[t._v("非带有 v-for 的 template 标签的直接子节点，节点的所有属性的 key 都满足静态 key；")])])])]),t._v(" "),e("p",[t._v("如果是普通元素非静态节点，则遍历它的所有 children，递归执行静态节点的标记，子节点有不是静态的情况，则它的父节点也为非静态。")]),t._v(" "),e("p",[e("strong",[t._v("标记静态根")]),t._v("：缓存节点，优化diff过程，来减少操作dom")]),t._v(" "),e("h3",{attrs:{id:"codegen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#codegen"}},[t._v("#")]),t._v(" codegen")]),t._v(" "),e("p",[t._v("把AST语法树转换成可执行的"),e("code",[t._v("render")]),t._v("函数，")]),t._v(" "),e("p",[t._v("主要处理AST的以下属性，将其变成render函数的写法：")]),t._v(" "),e("ul",[e("li",[t._v("static静态节点")]),t._v(" "),e("li",[t._v("once只渲染一次的节点")]),t._v(" "),e("li",[t._v("for处理循环")]),t._v(" "),e("li",[t._v("if处理条件渲染")]),t._v(" "),e("li",[t._v("children递归处理树状结构")]),t._v(" "),e("li",[t._v("slot处理插槽")]),t._v(" "),e("li",[t._v("处理组件或者原生dom标签")])]),t._v(" "),e("h2",{attrs:{id:"扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),e("p",[t._v("主要介绍event、v-model、slot、keep-alive、transition等。")]),t._v(" "),e("h3",{attrs:{id:"event事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event事件"}},[t._v("#")]),t._v(" event事件")]),t._v(" "),e("p",[t._v("主要从下面三个角度分析：")]),t._v(" "),e("ul",[e("li",[t._v("编译解析")]),t._v(" "),e("li",[t._v("dom原生事件")]),t._v(" "),e("li",[t._v("组件自定义事件")])]),t._v(" "),e("p",[e("strong",[t._v("编译解析")])]),t._v(" "),e("p",[t._v("在编译过程中解析template模版，识别其中"),e("code",[t._v("v-on")]),t._v("、"),e("code",[t._v("@")]),t._v("等指令，记录下事件的"),e("code",[t._v("名称")]),t._v("和"),e("code",[t._v("回调函数")]),t._v("，其中回调函数可能使函数名称或者一个函数。")]),t._v(" "),e("p",[e("strong",[t._v("dom原生事件")])]),t._v(" "),e("p",[t._v("绑定方法：在组件上使用原生事件需要加"),e("code",[t._v(".native")]),t._v(" 修饰符（例如@click.native）\n添加移除：DOM事件调用原生 "),e("code",[t._v("addEventListener")]),t._v(" 和"),e("code",[t._v("removeEventListener")]),t._v("；")]),t._v(" "),e("p",[e("strong",[t._v("组件自定义事件")])]),t._v(" "),e("p",[t._v("通过事件中心实现，思想类似发布订阅模式：")]),t._v(" "),e("ul",[e("li",[t._v("把所有的事件用 vm._events 存储起来，当执行 vm.$on(event,fn) 的时候，按事件的名称 event 把回调函数 fn 存储起来 vm._events[event].push(fn)。")]),t._v(" "),e("li",[t._v("当执行 vm.$emit(event) 的时候，根据事件名 event 找到所有的回调函数 let cbs = vm._events[event]，然后遍历执行所有的回调函数。")]),t._v(" "),e("li",[t._v("当执行 vm.$off(event,fn) 的时候会移除指定事件名 event 和指定的 fn")]),t._v(" "),e("li",[t._v("当执行 vm.once(event,fn)的时候，内部就是执行vm.once(event,fn) 的时候，内部就是执行 vm.once(event,fn)的时候，内部就是执行vm.on，并且当回调函数执行一次后再通过 vm.$off 移除事件的回调，这样就确保了回调函数只执行一次。")])]),t._v(" "),e("p",[e("strong",[t._v("注意")])]),t._v(" "),e("ul",[e("li",[t._v("原生DOM事件和自定义事件主要的"),e("code",[t._v("区别")]),t._v("：添加和删除事件的方式不一样；DOM事件调用原生 "),e("code",[t._v("addEventListener")]),t._v(" 和"),e("code",[t._v("removeEventListener")]),t._v(" 添加和删除；自定义事件调用"),e("code",[t._v("vm.$off")]),t._v("方法删除回调函数即可；")]),t._v(" "),e("li",[t._v("只有组件节点才可以添加自定义事件，并且添加原生 DOM 事件需要使用 native 修饰符；而普通元素使用 .native 修饰符是没有作用的，也只能添加原生 DOM 事件。")])]),t._v(" "),e("h3",{attrs:{id:"v-model双向数据绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-model双向数据绑定"}},[t._v("#")]),t._v(" v-model双向数据绑定")]),t._v(" "),e("p",[t._v("数据响应：data ➜ view\nv-model双向数据绑定: data "),e("strong",[t._v("↔")]),t._v(" view")]),t._v(" "),e("p",[t._v("v-model 是一种"),e("code",[t._v("语法糖")]),t._v("，即可以作用在"),e("code",[t._v("普通表单元素")]),t._v("上，又可以作用在"),e("code",[t._v("组件")]),t._v("上。")]),t._v(" "),e("ul",[e("li",[t._v("表单元素实现 v-model 的方法：")])]),t._v(" "),e("p",[t._v("通过修改 AST 元素，给 el 添加一个 prop，相当于我们在 input 上动态绑定了 value，又给 el 添加了事件处理，相当于在 input 上绑定了 input 事件。"),e("code",[t._v('<input v-model="message" />')]),t._v(" 相当于： "),e("code",[t._v('<input v-bind:value="message" v-on:input="message=$event.target.value" />')])]),t._v(" "),e("ul",[e("li",[t._v("对组件来说就是：")])]),t._v(" "),e("p",[e("code",[t._v('<child :value="message" @input="e => message = e"/>')]),t._v(" 组件可以配置子组件接收的 prop 名称和派发的事件名称")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  props"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'msg'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  model"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    prop"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'msg'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    event"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  methods"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("h3",{attrs:{id:"slot插槽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slot插槽"}},[t._v("#")]),t._v(" slot插槽")]),t._v(" "),e("p",[t._v("插槽就像是子组件中的一个个空抽屉，父组件可以在调用子组件的时候自己决定放什么内容到不同的抽屉里。")]),t._v(" "),e("p",[e("strong",[t._v("编译")])]),t._v(" "),e("ul",[e("li",[t._v("编译父组件时，当解析到标签上有 slot 属性的时候，将元素节点上标记为data.slot = slotName || 'default'")]),t._v(" "),e("li",[t._v("编译自组件时，当解析到 slot 标签的时候，在此AST元素节点上标记 slotName ，然后在渲染阶段从父组件的 children 中遍历匹配data.slot 获取对应名称渲染好的插槽vnode")])]),t._v(" "),e("p",[e("strong",[t._v("作用域插槽")]),t._v("\n作用域插槽作用：子组件给父组件传递数据。")]),t._v(" "),e("p",[t._v("读取 scoped-slot 属性并赋值给当前元素节点的 slotScope 属性，接下来在构造 AST树的时候，不会作为 children 添加到当前 AST 树中，而是存到父 AST 元素节点的 scopedSlots 属性上，它是一个对象，以插槽名称 name 为 key，以渲染函数为value。")]),t._v(" "),e("p",[t._v("然后在子组件渲染的时候，取到父组件的scopedSlots 里面的渲染函数，执行生成vnode。")]),t._v(" "),e("p",[e("strong",[t._v("普通插槽和作用域插槽的区别：")])]),t._v(" "),e("ul",[e("li",[t._v("普通插槽是在父组件编译和渲染阶段生成 vnodes，所以数据的作用域是"),e("code",[t._v("父组件实例")]),t._v("，子组件渲染的时候直接拿到这些渲染好的 vnodes")]),t._v(" "),e("li",[t._v("对于作用域插槽，父组件在编译和渲染阶段并不会直接生成 vnodes，而是在父节点 vnode 的 data 中保留一个 scopedSlots 对象，存储着不同名称的插槽以及它们对应的渲染函数，只有在编译和渲染子组件阶段才会执行这个渲染函数生成 vnodes，由于是在子组件环境执行的，所以对应的数据作用域是"),e("code",[t._v("子组件实例")]),t._v("。")]),t._v(" "),e("li",[t._v("简单地说，两种插槽的目的都是让子组件 slot 占位符生成的内容由父组件来决定，但数据的作用域会根据它们 vnodes 渲染时机不同而不同。")])]),t._v(" "),e("h3",{attrs:{id:"keep-alive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[t._v("#")]),t._v(" keep-alive")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("keep-alive")]),t._v("是一个内置"),e("code",[t._v("抽象")]),t._v("组件，在组件实例建立父子关系的时候会被忽略；")]),t._v(" "),e("li",[t._v("created 钩子里定义了 this.cache 和 this.keys用来缓存已经创建过的 vnode；在组件重新被激活时把缓存的dom"),e("code",[t._v("vnode.elm")]),t._v("插入dom树即可；")]),t._v(" "),e("li",[t._v("keep-alive组件只处理第一个子元素（"),e("strong",[t._v("将子节点当成树的根节点故只有一个")]),t._v("），一般和它搭配使用的有 component 动态组件或者是 router-view组件；")]),t._v(" "),e("li",[t._v("include 和 exclude做匹配过滤，匹配成功的加入缓存，参数支持数组、字符串、正则表达式等；max 控制缓存的组件个数")]),t._v(" "),e("li",[t._v("生命周期：activated（激活）、deacitvated（冻结）")])]),t._v(" "),e("h3",{attrs:{id:"transition、transition-group"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transition、transition-group"}},[t._v("#")]),t._v(" transition、transition-group")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("keep-alive")]),t._v("也是一个内置抽象组件，是 "),e("code",[t._v("web平台独有")]),t._v("的，同样也只处理一个子节点（多了会警告）;")]),t._v(" "),e("li",[t._v("延迟dom操作的执行时机，用来执行动画，执行完毕进行dom操作。")]),t._v(" "),e("li",[t._v("通过监听dom上css3过渡动画的执行结束的事件得知执行完毕")])]),t._v(" "),e("p",[t._v("在下列情形中添加过渡效果")]),t._v(" "),e("ul",[e("li",[t._v("条件渲染 (使用 v-if)")]),t._v(" "),e("li",[t._v("条件展示 (使用 v-show)")]),t._v(" "),e("li",[t._v("动态组件")]),t._v(" "),e("li",[t._v("组件根节点")])]),t._v(" "),e("p",[t._v("Vue 的过渡实现分为以下几个步骤：")]),t._v(" "),e("ul",[e("li",[t._v("自动嗅探目标元素是否应用了 CSS 过渡或动画，如果是，在恰当的时机添加/删除 CSS 类名。")]),t._v(" "),e("li",[t._v("如果过渡组件提供了 JavaScript 钩子函数，这些钩子函数将在恰当的时机被调用。")]),t._v(" "),e("li",[t._v("如果没有找到 JavaScript 钩子并且也没有检测到 CSS 过渡/动画，DOM 操作 (插入/删除) 在下一帧（requestAnimationFrame实现）中立即执行。")])]),t._v(" "),e("p",[t._v("真正执行动画的是我们写的 CSS 或者是 JavaScript 钩子函数，而 Vue 的transition组件只是帮我们很好地管理了这些 CSS 的添加/删除，以及钩子函数的执行时机。")]),t._v(" "),e("p",[e("strong",[t._v("transition-group")])]),t._v(" "),e("ul",[e("li",[t._v("transiiton只能针对单一元素实现过渡效果，transition-group对列表实现过度效果，当修改列表的数据的时候，如果是添加或者删除数据，则会触发相应元素本身的过渡动画；")])]),t._v(" "),e("h2",{attrs:{id:"vue3比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3比较"}},[t._v("#")]),t._v(" vue3比较")]),t._v(" "),e("h3",{attrs:{id:"vue3新特性了解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3新特性了解"}},[t._v("#")]),t._v(" vue3新特性了解")]),t._v(" "),e("h4",{attrs:{id:"vue2-x的痛点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue2-x的痛点"}},[t._v("#")]),t._v(" vue2.x的痛点")]),t._v(" "),e("ul",[e("li",[t._v("源码自身的维护性；")]),t._v(" "),e("li",[t._v("数据量大后带来的渲染和更新的性能问题；")]),t._v(" "),e("li",[t._v("一些想舍弃但为了兼容一直保留的鸡肋 API 等；")]),t._v(" "),e("li",[t._v("TypeScript 支持；")])]),t._v(" "),e("h4",{attrs:{id:"vue3-0优化点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3-0优化点"}},[t._v("#")]),t._v(" vue3.0优化点")]),t._v(" "),e("ul",[e("li",[t._v("一、使用 monorepo管理源码")]),t._v(" "),e("li",[t._v("二、使用 TypeScript 开发源码")]),t._v(" "),e("li",[t._v("三、性能优化 1.源码体积优化 2.数据劫持优化Proxy 3.编译优化 4.diff算法优化")]),t._v(" "),e("li",[t._v("四、语法 API 优化：Composition API")])]),t._v(" "),e("h3",{attrs:{id:"细究一下diff算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#细究一下diff算法"}},[t._v("#")]),t._v(" 细究一下diff算法")]),t._v(" "),e("h4",{attrs:{id:"vue2的diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue2的diff"}},[t._v("#")]),t._v(" vue2的diff")]),t._v(" "),e("p",[t._v("组件更新核心是"),e("strong",[t._v("响应式数据监控到数据的改变，重新生成了虚拟dom树，然后通过diff算法计算出前后虚拟dom树的差异点，更新dom时只更新变化的部分")]),t._v("。 快问快答：")]),t._v(" "),e("p",[e("strong",[t._v("1. 为什么要diff？")])]),t._v(" "),e("p",[t._v("答： O(n^3) 意味着如果要展示1000个节点，就要依次执行上十亿次的比较，无法承受大数据量的对比。")]),t._v(" "),e("p",[t._v("直接比较和修改两个树的复杂度为什么是n^3？")]),t._v(" "),e("p",[t._v("答： 老树的每一个节点都去遍历新树的节点，直到找到新树对应的节点。那么这个流程就是 O(n^2)，再紧接着找到不同之后，再计算最短修改距离然后修改节点，这里是 O(n^3)。")]),t._v(" "),e("p",[e("strong",[t._v("2. diff的策略是什么？有什么根据？")])]),t._v(" "),e("ol",[e("li",[t._v("Web UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计，因此仅进行同层比较。")]),t._v(" "),e("li",[t._v("如果父节点不同，放弃对子节点的比较，直接删除旧节点然后添加新的节点重新渲染；")]),t._v(" "),e("li",[t._v("如果子节点有变化，Virtual DOM不会计算变化的是什么，而是重新渲染。")]),t._v(" "),e("li",[t._v("同级多个节点可通过唯一的key对比异同；")])]),t._v(" "),e("p",[e("strong",[t._v("3. diff流程是什么？")])]),t._v(" "),e("p",[t._v("答： 新旧节点不同：创建新节点 ➜ 更新父占位符节点 ➜ 删除旧节点； 新旧节点相同且没有子节点：不变； 新旧节点相同且都有子节点：遍历子节点同级比较，做移动、添加、删除三个操作；")]),t._v(" "),e("h4",{attrs:{id:"vue3-0的diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3-0的diff"}},[t._v("#")]),t._v(" vue3.0的diff")]),t._v(" "),e("p",[t._v("深度递归遍历vnode树，节点的标签和key相同认为是同一个节点则更新，不同则删除，然后处理子节点。 子节点分这几种情况处理：纯文本、vnode 数组和空")]),t._v(" "),e("p",[t._v("空往往意味着添加或删除； 纯文本相同直接更新innerText，不同则删除； 新旧子节点都是vnode数组则diff算法来处理；")]),t._v(" "),e("p",[e("strong",[t._v("vue3.0 diff算法思想")])]),t._v(" "),e("ul",[e("li",[t._v("编译模版时进行静态分析，标记动态节点，diff对比差异时仅对比动态节点（性能提升明显）；")]),t._v(" "),e("li",[t._v("diff算法先去头去尾，借此缩短遍历对比数组长度（对数组插入和删除操作性能优化明显）；")]),t._v(" "),e("li",[t._v("通过对更新前后子节点数组建立映射表的方式，将O(n^2)复杂度的遍历降低到O(n)；")]),t._v(" "),e("li",[e("strong",[t._v("通过最长递增子序列方法")]),t._v("了来diff前后的子节点数组，减少移动操作的次数；")])]),t._v(" "),e("p",[e("strong",[t._v("最长递增子序列算法实现")]),t._v("：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-increasing-subsequence/",target:"_blank",rel:"noopener noreferrer"}},[t._v("leetcode最长递增子序列算法题"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 寻找最长递增子序列\n * 使用动态规划思想，a -> c = a -> b + b -> c\n * 其中p数组存储的是从p[p[i]] 到 p[i] 的最长递增子序列索引，也就是前一个b的索引；\n * r数组存储最后一个元素也就是c的索引\n */")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSequenceOfLIS")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" val "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" top "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("top"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" top"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二分法搜索")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" r"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回朔p数组，找出最长递增子序列")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" preIndex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" preIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        preIndex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br")])]),e("h2",{attrs:{id:"vue-router"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" vue-router")]),t._v(" "),e("blockquote",[e("p",[t._v("路由的功能是"),e("code",[t._v("统筹分发")]),t._v("，告诉什么人应该干什么事情，对前端来说就是将不同的路径映射到不同的功能（视图）上去。")])]),t._v(" "),e("p",[t._v("vue-router支持 "),e("code",[t._v("hash")]),t._v("、"),e("code",[t._v("history")]),t._v("、"),e("code",[t._v("abstract")]),t._v(" 3 种路由方式，提供了 "),e("code",[t._v("<router-link>")]),t._v(" 和 "),e("code",[t._v("<router-view>")]),t._v(" 2 种组件")]),t._v(" "),e("h3",{attrs:{id:"路由注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由注册"}},[t._v("#")]),t._v(" 路由注册")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Vue 从它的设计上就是一个渐进式 JavaScript 框架，它本身的核心是解决视图渲染的问题，其它的能力就通过插件的方式来解决。Vue-Router 就是官方维护的路由插件。")])]),t._v(" "),e("li",[e("p",[t._v("插件通过Vue.use方法来实现注册，实际上是运行插件的install方法")])]),t._v(" "),e("li",[e("p",[t._v("Vue-Router安装最重要的一步就是利用 Vue.mixin 去把 beforeCreate 和 destroyed 钩子函数注入到每一个组件中")])]),t._v(" "),e("li",[e("p",[t._v("通过在Vue.prototype原型上添加方法的方式来让用户访问到方法，使用defineProperty设置只读可避免被用户手动篡改。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$router'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_routerRoot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_router "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("注册全局组件"),e("code",[t._v("<router-link>")]),t._v(" 和 "),e("code",[t._v("<router-view>")])])])]),t._v(" "),e("h3",{attrs:{id:"vuerouter-对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuerouter-对象"}},[t._v("#")]),t._v(" VueRouter 对象")]),t._v(" "),e("p",[t._v("包含以下方法：")]),t._v(" "),e("ul",[e("li",[t._v("init")]),t._v(" "),e("li",[t._v("beforeEach")]),t._v(" "),e("li",[t._v("beforeResolve")]),t._v(" "),e("li",[t._v("afterEach")]),t._v(" "),e("li",[t._v("onReady")]),t._v(" "),e("li",[t._v("onError")]),t._v(" "),e("li",[t._v("push")]),t._v(" "),e("li",[t._v("replace")]),t._v(" "),e("li",[t._v("go")]),t._v(" "),e("li",[t._v("back")]),t._v(" "),e("li",[t._v("forward")]),t._v(" "),e("li",[t._v("getMatchedComponents")]),t._v(" "),e("li",[t._v("resolve")]),t._v(" "),e("li",[t._v("addRoutes")])]),t._v(" "),e("h3",{attrs:{id:"matcher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#matcher"}},[t._v("#")]),t._v(" matcher")]),t._v(" "),e("p",[t._v("匹配过程主要做的事情：")]),t._v(" "),e("ul",[e("li",[t._v("初始化根据用户传递的路由配置，生成映射表")]),t._v(" "),e("li",[t._v("解析url参数，url与用户设置的路由路径匹配")])]),t._v(" "),e("h3",{attrs:{id:"路径切换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路径切换"}},[t._v("#")]),t._v(" 路径切换")]),t._v(" "),e("p",[t._v("路由始终会维护当前的线路，路由切换的时候会把当前线路切换到目标线路，切换过程中会执行一系列的导航守卫钩子函数，会更改 url，同样也会渲染对应的组件，切换完毕后会把目标线路更新替换当前线路，这样就会作为下一次的路径切换的依据。")]),t._v(" "),e("ul",[e("li",[t._v("router-link点击相当于调用$router.push方法去修改url")])]),t._v(" "),e("p",[e("code",[t._v("<router-link>")]),t._v(" 比起写死的 "),e("code",[t._v('<a href="...">')]),t._v(" 会好一些，理由如下：")]),t._v(" "),e("ul",[e("li",[t._v("无论是 HTML5 history 模式还是 hash 模式，它的表现行为一致，所以，当你要切换路由模式，或者在 IE9 降级使用 hash 模式，无须作任何变动。")]),t._v(" "),e("li",[t._v("在 HTML5 history 模式下，router-link 会守卫点击事件，让浏览器不再重新加载页面。")]),t._v(" "),e("li",[t._v("当你在 HTML5 history 模式下使用 base 选项之后，所有的 to 属性都不需要写（基路径）了。")])]),t._v(" "),e("h2",{attrs:{id:"相关链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关链接"}},[t._v("#")]),t._v(" 相关链接")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js 技术揭秘"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("https://juejin.cn/post/6886266739378618382")])])}),[],!1,null,null,null);s.default=n.exports}}]);